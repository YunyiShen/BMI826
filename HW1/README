## For Question 5:
The executable is `checkPath` with 3 arguements, 
    namely the input file, starting node and destination node. 
If it is the first run, it will take some time to compile.
Node names are case sensitive, should be string.

For instance:

```shell
cd prob5
./checkPath input.txt A B
```

If you wish to compile it, use the shell script, the additional compilation flag is ` -Wall -I../` in order to include `Graph.hpp`

```shell
cd prob5
./checkPath.sh input.txt A B
```

The implementation is in `checkPath.cpp`, 
    while actually main algorithms for both question are in `Graph.hpp` as a template library



## For question 6:
The executable is `compareGraphsPathwise` with 2 arguements, 
    namely the two graph input files. 
If it is the first run, it will take some time to compile.
Node names are case sensitive, should be string.

For instance:
```shell
cd prob6
./compareGraphsPathwise graph1.txt graph2.txt
```

If you wish to compile it, use the shell script, the additional compilation flag is ` -Wall -I../` in order to include `Graph.hpp`.

```shell
cd prob6
./compareGraphsPathwise.sh graph1.txt graph2.txt
```

The implementation is in `compareGraphsPathwise.cpp`, 
    while actually main algorithms for both question are in `Graph.hpp` as a template library


